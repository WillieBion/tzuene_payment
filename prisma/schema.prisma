// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // engineType    = "library"
  // //  previewFeatures = ["clientExtensions"]
  // // Disable fs access
  // binaryTargets = ["native"]
  // extensions = ["dataProxy"]
  // output        = "./generated/db1"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACCEPTED
  REJECTED
  DUPLICATE_IGNORED
}

enum TicketStatus {
  VALID
  INVALID
  EXPIRED
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Transactions {
  id            Int       @id @default(autoincrement())
  customerId    String
  msisdn        String
  transactionId String    @unique
  orderId       String
  amount        String
  status        Status
  rejectCode    String?
  rejectReason  String?
  createdAt     DateTime  @default(now())
  tickets       Tickets[]
}

model Tickets {
  id             Int          @id @default(autoincrement())
  bookingId      String   @unique
  eventId        String
  amount         String
  status         TicketStatus
  ticketType     String
  createdAt      DateTime     @default(now())
  Transactions   Transactions @relation(fields: [transactionId], references: [id])
  transactionId Int
}

model EmailSent {
  id        Int      @id @default(autoincrement())
  email     String
  type      String
  status    String
  metadata  Json
  createdAt DateTime @default(now())
}
